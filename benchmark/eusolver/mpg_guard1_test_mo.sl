(set-logic LIA)

(define-fun func1 ((X Int) (a1 Int) ) Int (+ X a1 ))
(define-fun func2 ((Y Int) (a1 Int) ) Int (+ Y a1 ))
(define-fun func3 ((Z Int) (a1 Int) ) Int (+ Z a1 ))
(define-fun func4 ((a1 Int) ) Int (+ 0 a1 ))
(define-fun func5 ((a1 Int) ) Int (+ 1 a1 ))
(define-fun func6 ((a1 Int) (a2 Int) (a3 Int) ) Int (+ (+ a1 a2 )a3 ))
(define-fun func7 ((a1 Int) (a2 Int) (a3 Int) ) Int (+ (- a1 a2 )a3 ))
(define-fun func8 ((b1 Bool) (a1 Int) (a2 Int) (a3 Int) ) Int (+ (ite b1 a1 a2 )a3 ))
(define-fun func9 ((X Int) (a1 Int) ) Int (- X a1 ))
(define-fun func10 ((Y Int) (a1 Int) ) Int (- Y a1 ))
(define-fun func11 ((Z Int) (a1 Int) ) Int (- Z a1 ))
(define-fun func12 ((a1 Int) ) Int (- 0 a1 ))
(define-fun func13 ((a1 Int) ) Int (- 1 a1 ))
(define-fun func14 ((a1 Int) (a2 Int) (a3 Int) ) Int (- (- a1 a2 )a3 ))
(define-fun func15 ((b1 Bool) (a1 Int) (a2 Int) (a3 Int) ) Int (- (ite b1 a1 a2 )a3 ))
(define-fun func16 ((a1 Int) (X Int) ) Int (- a1 X ))
(define-fun func17 ((a1 Int) (Y Int) ) Int (- a1 Y ))
(define-fun func18 ((a1 Int) (Z Int) ) Int (- a1 Z ))
(define-fun func19 ((a1 Int) ) Int (- a1 1 ))
(define-fun func20 ((a1 Int) (b1 Bool) (a2 Int) (a3 Int) ) Int (- a1 (ite b1 a2 a3 )))
(define-fun func21 ((b1 Bool) (b2 Bool) (a1 Int) (a2 Int) ) Int (ite (and b1 b2 )a1 a2 ))
(define-fun func22 ((b1 Bool) (b2 Bool) (a1 Int) (a2 Int) ) Int (ite (or b1 b2 )a1 a2 ))
(define-fun func23 ((b1 Bool) (a1 Int) (a2 Int) ) Int (ite (not b1 )a1 a2 ))
(define-fun func24 ((a1 Int) (a2 Int) (a3 Int) (a4 Int) ) Int (ite (< a1 a2 )a3 a4 ))
(define-fun func25 ((a1 Int) (a2 Int) (a3 Int) (a4 Int) ) Int (ite (= a1 a2 )a3 a4 ))
(define-fun func26 ((b1 Bool) (X Int) (a1 Int) ) Int (ite b1 X a1 ))
(define-fun func27 ((b1 Bool) (Y Int) (a1 Int) ) Int (ite b1 Y a1 ))
(define-fun func28 ((b1 Bool) (Z Int) (a1 Int) ) Int (ite b1 Z a1 ))
(define-fun func29 ((b1 Bool) (a1 Int) ) Int (ite b1 0 a1 ))
(define-fun func30 ((b1 Bool) (a1 Int) ) Int (ite b1 1 a1 ))
(define-fun func31 ((b1 Bool) (a1 Int) (a2 Int) (a3 Int) ) Int (ite b1 (+ a1 a2 )a3 ))
(define-fun func32 ((b1 Bool) (a1 Int) (a2 Int) (a3 Int) ) Int (ite b1 (- a1 a2 )a3 ))
(define-fun func33 ((b1 Bool) (b2 Bool) (a1 Int) (a2 Int) (a3 Int) ) Int (ite b1 (ite b2 a1 a2 )a3 ))
(define-fun func34 ((b1 Bool) (a1 Int) (X Int) ) Int (ite b1 a1 X ))
(define-fun func35 ((b1 Bool) (a1 Int) (Y Int) ) Int (ite b1 a1 Y ))
(define-fun func36 ((b1 Bool) (a1 Int) (Z Int) ) Int (ite b1 a1 Z ))
(define-fun func37 ((b1 Bool) (a1 Int) ) Int (ite b1 a1 0 ))
(define-fun func38 ((b1 Bool) (a1 Int) ) Int (ite b1 a1 1 ))
(define-fun func39 ((b1 Bool) (a1 Int) (a2 Int) (a3 Int) ) Int (ite b1 a1 (+ a2 a3 )))
(define-fun func40 ((b1 Bool) (a1 Int) (a2 Int) (a3 Int) ) Int (ite b1 a1 (- a2 a3 )))
(define-fun func41 ((b1 Bool) (a1 Int) (b2 Bool) (a2 Int) (a3 Int) ) Int (ite b1 a1 (ite b2 a2 a3 )))
(define-fun func42 ((b1 Bool) (b2 Bool) (b3 Bool) ) Bool (and (and b1 b2 )b3 ))
(define-fun func43 ((b1 Bool) (b2 Bool) (b3 Bool) ) Bool (and (or b1 b2 )b3 ))
(define-fun func44 ((b1 Bool) (b2 Bool) ) Bool (and (not b1 )b2 ))
(define-fun func45 ((a1 Int) (a2 Int) (b1 Bool) ) Bool (and (< a1 a2 )b1 ))
(define-fun func46 ((a1 Int) (a2 Int) (b1 Bool) ) Bool (and (= a1 a2 )b1 ))
(define-fun func47 ((a1 Int) (a2 Int) (b1 Bool) ) Bool (and (<= a1 a2 )b1 ))
(define-fun func48 ((b1 Bool) (b2 Bool) (b3 Bool) ) Bool (or (and b1 b2 )b3 ))
(define-fun func49 ((b1 Bool) (b2 Bool) (b3 Bool) ) Bool (or (or b1 b2 )b3 ))
(define-fun func50 ((b1 Bool) (b2 Bool) ) Bool (or (not b1 )b2 ))
(define-fun func51 ((a1 Int) (a2 Int) (b1 Bool) ) Bool (or (< a1 a2 )b1 ))
(define-fun func52 ((a1 Int) (a2 Int) (b1 Bool) ) Bool (or (= a1 a2 )b1 ))
(define-fun func53 ((a1 Int) (a2 Int) (b1 Bool) ) Bool (or (<= a1 a2 )b1 ))
(define-fun func54 ((b1 Bool) (b2 Bool) ) Bool (not (and b1 b2 )))
(define-fun func55 ((b1 Bool) (b2 Bool) ) Bool (not (or b1 b2 )))
(define-fun func56 ((b1 Bool) ) Bool (not (not b1 )))
(define-fun func57 ((a1 Int) (a2 Int) ) Bool (not (< a1 a2 )))
(define-fun func58 ((a1 Int) (a2 Int) ) Bool (not (= a1 a2 )))
(define-fun func59 ((a1 Int) (a2 Int) ) Bool (not (<= a1 a2 )))
(define-fun func60 ((X Int) (a1 Int) ) Bool (< X a1 ))
(define-fun func61 ((Y Int) (a1 Int) ) Bool (< Y a1 ))
(define-fun func62 ((Z Int) (a1 Int) ) Bool (< Z a1 ))
(define-fun func63 ((a1 Int) ) Bool (< 0 a1 ))
(define-fun func64 ((a1 Int) ) Bool (< 1 a1 ))
(define-fun func65 ((a1 Int) (a2 Int) (a3 Int) ) Bool (< (+ a1 a2 )a3 ))
(define-fun func66 ((a1 Int) (a2 Int) (a3 Int) ) Bool (< (- a1 a2 )a3 ))
(define-fun func67 ((b1 Bool) (a1 Int) (a2 Int) (a3 Int) ) Bool (< (ite b1 a1 a2 )a3 ))
(define-fun func68 ((a1 Int) (X Int) ) Bool (< a1 X ))
(define-fun func69 ((a1 Int) (Y Int) ) Bool (< a1 Y ))
(define-fun func70 ((a1 Int) (Z Int) ) Bool (< a1 Z ))
(define-fun func71 ((a1 Int) ) Bool (< a1 0 ))
(define-fun func72 ((a1 Int) ) Bool (< a1 1 ))
(define-fun func73 ((a1 Int) (b1 Bool) (a2 Int) (a3 Int) ) Bool (< a1 (ite b1 a2 a3 )))
(define-fun func74 ((X Int) (a1 Int) ) Bool (= X a1 ))
(define-fun func75 ((Y Int) (a1 Int) ) Bool (= Y a1 ))
(define-fun func76 ((Z Int) (a1 Int) ) Bool (= Z a1 ))
(define-fun func77 ((a1 Int) ) Bool (= 0 a1 ))
(define-fun func78 ((a1 Int) ) Bool (= 1 a1 ))
(define-fun func79 ((a1 Int) (a2 Int) (a3 Int) ) Bool (= (+ a1 a2 )a3 ))
(define-fun func80 ((b1 Bool) (a1 Int) (a2 Int) (a3 Int) ) Bool (= (ite b1 a1 a2 )a3 ))
(define-fun func81 ((X Int) (a1 Int) ) Bool (<= X a1 ))
(define-fun func82 ((Y Int) (a1 Int) ) Bool (<= Y a1 ))
(define-fun func83 ((Z Int) (a1 Int) ) Bool (<= Z a1 ))
(define-fun func84 ((a1 Int) ) Bool (<= 0 a1 ))
(define-fun func85 ((a1 Int) (a2 Int) (a3 Int) ) Bool (<= (+ a1 a2 )a3 ))
(define-fun func86 ((a1 Int) (a2 Int) (a3 Int) ) Bool (<= (- a1 a2 )a3 ))
(define-fun func87 ((b1 Bool) (a1 Int) (a2 Int) (a3 Int) ) Bool (<= (ite b1 a1 a2 )a3 ))
(define-fun func88 ((a1 Int) (X Int) ) Bool (<= a1 X ))
(define-fun func89 ((a1 Int) (Y Int) ) Bool (<= a1 Y ))
(define-fun func90 ((a1 Int) (Z Int) ) Bool (<= a1 Z ))
(define-fun func91 ((a1 Int) ) Bool (<= a1 1 ))
(define-fun func92 ((a1 Int) (b1 Bool) (a2 Int) (a3 Int) ) Bool (<= a1 (ite b1 a2 a3 )))
(synth-fun eq1 ( (x Int) (y Int) (z Int) ) Int
    ((Start Int (x
                 y
                 z
                 0
                 1
                (func1 X Start )
                (func2 Y Start )
                (func3 Z Start )
                (func4 Start )
                (func5 Start )
                (func6 Start Start Start )
                (func7 Start Start Start )
                (func8 StartBool Start Start Start )
                (func9 X Start )
                (func10 Y Start )
                (func11 Z Start )
                (func12 Start )
                (func13 Start )
                (func14 Start Start Start )
                (func15 StartBool Start Start Start )
                (func16 Start X )
                (func17 Start Y )
                (func18 Start Z )
                (func19 Start )
                (func20 Start StartBool Start Start )
                (func21 StartBool StartBool Start Start )
                (func22 StartBool StartBool Start Start )
                (func23 StartBool Start Start )
                (func24 Start Start Start Start )
                (func25 Start Start Start Start )
                (func26 StartBool X Start )
                (func27 StartBool Y Start )
                (func28 StartBool Z Start )
                (func29 StartBool Start )
                (func30 StartBool Start )
                (func31 StartBool Start Start Start )
                (func32 StartBool Start Start Start )
                (func33 StartBool StartBool Start Start Start )
                (func34 StartBool Start X )
                (func35 StartBool Start Y )
                (func36 StartBool Start Z )
                (func37 StartBool Start )
                (func38 StartBool Start )
                (func39 StartBool Start Start Start )
                (func40 StartBool Start Start Start )
                (func41 StartBool Start StartBool Start Start )
                 ))
     (X Int (x))
     (Y Int (y))
     (Z Int (z))
     (StartBool Bool ((func42 StartBool StartBool StartBool )
                    (func43 StartBool StartBool StartBool )
                    (func44 StartBool StartBool )
                    (func45 Start Start StartBool )
                    (func46 Start Start StartBool )
                    (func47 Start Start StartBool )
                    (func48 StartBool StartBool StartBool )
                    (func49 StartBool StartBool StartBool )
                    (func50 StartBool StartBool )
                    (func51 Start Start StartBool )
                    (func52 Start Start StartBool )
                    (func53 Start Start StartBool )
                    (func54 StartBool StartBool )
                    (func55 StartBool StartBool )
                    (func56 StartBool )
                    (func57 Start Start )
                    (func58 Start Start )
                    (func59 Start Start )
                    (func60 X Start )
                    (func61 Y Start )
                    (func62 Z Start )
                    (func63 Start )
                    (func64 Start )
                    (func65 Start Start Start )
                    (func66 Start Start Start )
                    (func67 StartBool Start Start Start )
                    (func68 Start X )
                    (func69 Start Y )
                    (func70 Start Z )
                    (func71 Start )
                    (func72 Start )
                    (func73 Start StartBool Start Start )
                    (func74 X Start )
                    (func75 Y Start )
                    (func76 Z Start )
                    (func77 Start )
                    (func78 Start )
                    (func79 Start Start Start )
                    (func80 StartBool Start Start Start )
                    (func81 X Start )
                    (func82 Y Start )
                    (func83 Z Start )
                    (func84 Start )
                    (func85 Start Start Start )
                    (func86 Start Start Start )
                    (func87 StartBool Start Start Start )
                    (func88 Start X )
                    (func89 Start Y )
                    (func90 Start Z )
                    (func91 Start )
                    (func92 Start StartBool Start Start )
                      ))))

(define-fun iteB (( b1 Bool ) (b2 Bool ) (b3 Bool )) Bool ( or ( and b1 b2 ) ( and (not b1 ) b3 ) ) )
(define-fun plus2 ((b1 Int) (b2 Int)) Int ( + b1 b2))
(define-fun plus3 ((b1 Int) (b2 Int) (b3 Int)) Int ( +  ( + b1 b2) b3))
(define-fun plus4 ((b1 Int) (b2 Int) (b3 Int) (b4 Int)) Int ( +  ( plus3  b1 b2 b3) b4))
(define-fun plus5 ((b1 Int) (b2 Int) (b3 Int) (b4 Int) (b5 Int)) Int (+  ( plus4 b1 b2 b3 b4) b5))
(define-fun plus6 ((b1 Int) (b2 Int) (b3 Int) (b4 Int) (b5 Int) (b6 Int) ) Int (+  ( plus5 b1 b2 b3 b4  b5) b6  ))
(define-fun plus7 ((b1 Int) (b2 Int) (b3 Int) (b4 Int) (b5 Int) (b6 Int) (b7 Int)) Int (+  ( plus6 b1 b2 b3 b4  b5 b6 ) b7  ))
(define-fun plus8 ((b1 Int) (b2 Int) (b3 Int) (b4 Int) (b5 Int) (b6 Int) (b7 Int) (be Int)) Int (+  ( plus7 b1 b2 b3 b4  b5 b6 b7) be  ))
(define-fun plus9 ((b1 Int) (b2 Int) (b3 Int) (b4 Int) (b5 Int) (b6 Int) (b7 Int) (be Int) (bn Int)) Int (+  ( plus8 b1 b2 b3 b4  b5 b6 b7 be) bn  ))

(define-fun or3 ((b1 Bool) (b2 Bool) (b3 Bool)) Bool ( or ( or b1 b2) b3))
(define-fun one-times  ((b1 Int )) Int b1)
(define-fun two-times  ((b1 Int )) Int ( plus2 b1 b1))
(define-fun three-times  ((b1 Int )) Int ( plus3 b1 b1 b1))
(define-fun five-times  ((b1 Int )) Int ( plus5 b1 b1 b1 b1 b1 ))
(define-fun seven-times ((b1 Int )) Int ( plus7 b1 b1 b1 b1 b1 b1 b1 ))
(define-fun nine-times  ((b1 Int )) Int ( plus9 b1 b1 b1 b1 b1 b1 b1 b1 b1))
(define-fun ten-times  ((b1 Int )) Int ( plus9 b1 b1 b1 b1 b1 b1 b1 b1 ( plus2 b1 b1 )))
(define-fun minus ((b1 Int)) Int ( - 0  b1 ))

(declare-var x Int ) 
(declare-var y Int ) 
(declare-var z Int ) 



( constraint ( iteB ( >= (plus2 x y) 1 ) 
                    ( = ( eq1 x y z) ( plus2 x  y    ) )
		    ( = ( eq1 x y z) ( plus2 x  (minus y)   ) )
             )
)      


(check-synth)
	
